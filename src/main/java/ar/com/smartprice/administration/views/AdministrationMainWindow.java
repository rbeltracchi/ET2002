/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ar.com.smartprice.administration.views;

import ar.com.smartprice.administration.views.lateral.PanelAdministratorLogged;
import ar.com.smartprice.administration.views.lateral.PanelLogin;
import ar.com.smartprice.administration.views.main.PanelAdministratorMain;
import ar.com.smartprice.dtos.CategoryDto;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Toolkit;
import java.util.List;
import javax.swing.tree.DefaultMutableTreeNode;

/**
 *
 * @author Andres
 */
public class AdministrationMainWindow extends javax.swing.JFrame {

    public PanelLogin panelLogin;
    public PanelAdministratorLogged panelLogged;
    public PanelAdministratorMain panelAdminMain;

    /**
     * Creates new form FrameVentPpal
     */
    public AdministrationMainWindow() {
        initComponents();
        this.setTitle("SmartPrice Administracion");
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        this.setExtendedState(Frame.MAXIMIZED_BOTH);
        //this.setLocation(screenSize.width / 2 - this.getSize().width / 2, screenSize.height / 2 - this.getSize().height / 2);

        this.panelLateral.setBounds(0, 0, 275, 300);
        this.panelLogin = new PanelLogin();
        this.panelLogged = new PanelAdministratorLogged();
        this.panelAdminMain = new PanelAdministratorMain();

        this.clearAndShowInPanelLateral(panelLogin);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelLateral = new javax.swing.JPanel();
        panelMain = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SmartPrice\n");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        panelLateral.setPreferredSize(new java.awt.Dimension(220, 364));

        javax.swing.GroupLayout panelLateralLayout = new javax.swing.GroupLayout(panelLateral);
        panelLateral.setLayout(panelLateralLayout);
        panelLateralLayout.setHorizontalGroup(
            panelLateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 290, Short.MAX_VALUE)
        );
        panelLateralLayout.setVerticalGroup(
            panelLateralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 672, Short.MAX_VALUE)
        );

        panelMain.setPreferredSize(new java.awt.Dimension(400, 105));

        javax.swing.GroupLayout panelMainLayout = new javax.swing.GroupLayout(panelMain);
        panelMain.setLayout(panelMainLayout);
        panelMainLayout.setHorizontalGroup(
            panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 867, Short.MAX_VALUE)
        );
        panelMainLayout.setVerticalGroup(
            panelMainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 633, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelLateral, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelMain, javax.swing.GroupLayout.DEFAULT_SIZE, 867, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelLateral, javax.swing.GroupLayout.DEFAULT_SIZE, 672, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelMain, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JPanel panelLateral;
    public javax.swing.JPanel panelMain;
    // End of variables declaration//GEN-END:variables

    public void administratorLogged(String administratorName) {
        this.clearAndShowInPanelLateral(panelLogged);
        this.panelLogin.txtPassword.setText(null);
        this.clearAndShowInPanelMain(panelAdminMain);
        this.panelLogged.setLblAdministratorName(administratorName);

    }

    public void administratorLogout() {
        clearAndShowInPanelLateral(panelLogin);
        clearAndShowInPanelMain(null);
    }

    private void clearAndShowInPanelLateral(javax.swing.JPanel panel) {
        panelLateral.removeAll();
        panelLateral.add(panel, BorderLayout.CENTER);
        panelLateral.revalidate();
        panelLateral.repaint();
    }

    private void clearAndShowInPanelMain(javax.swing.JPanel panel) {
        panelMain.removeAll();
        if (panel != null) {
            panelMain.add(panel, BorderLayout.CENTER);

        }
        panelMain.revalidate();
        panelMain.repaint();

    }

    public void setCategories(List<CategoryDto> categories) {
        DefaultMutableTreeNode top = new DefaultMutableTreeNode("Categorias");
        
        
        
        
        //this.panelAdminMain.panelCategories
        //treeCategories.add(top);
        
        if (categories != null) {

            for (CategoryDto category : categories) {
                System.out.println("Categoria " + category.getId());
                System.out.println("Categoria " + category.getName());
                if (category.getCategoriaPadre() != null) {
                    System.out.println("Categoria " + category.getCategoriaPadre().getId());
                }
                System.out.println("-------------------------------");

            }
            System.out.println(categories.toString());

//DefaultMutableTreeNode top = new DefaultMutableTreeNode("Categorias");
            //this.panelAdminMain.treeCategories.add(top);
        }

    }

}
