package ar.com.smartprice.views;

import ar.com.smartprice.dtos.UserDto;
import ar.com.smartprice.dtos.SPErrorDto;
import ar.com.smartprice.utils.Sanatizer;
import ar.com.smartprice.models.services.GmapService;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;

/**
 *
 * @author Juan
 */
public final class UserSignInPanel extends javax.swing.JPanel implements FocusListener {

    /**
     * Creates new form singInOffererPanel
     */
    private String direccionValidada = "";

    public UserSignInPanel() {
        initComponents();
        //setBackground( Color(102,51,153,100));
        this.txtAddress.addFocusListener(this);
        this.txtCuit.addFocusListener(this);
        this.hideOffererFilds();
        this.hideWarnings();
    }

    public UserDto getData() {
        UserDto retorno = new UserDto();
        if (String.valueOf(cboUserType.getSelectedItem()).equalsIgnoreCase("Consumidor")) {
            if (txtEmail.getText().isEmpty()
                    || String.valueOf(txtPassword.getPassword()).isEmpty()
                    || String.valueOf(txtRePassword.getPassword()).isEmpty()) {
                retorno.setError(new SPErrorDto("Faltan campos requeridos."));
                return retorno;
            } else if (String.valueOf(txtPassword.getPassword()).length() < 5) {
                retorno.setError(new SPErrorDto(" La contraseña debe superar los 5 caracteres."));
                return retorno;
            }
        } else {
            if (txtEmail.getText().isEmpty()
                    || String.valueOf(txtPassword.getPassword()).isEmpty()
                    || String.valueOf(txtRePassword.getPassword()).isEmpty()
                    || txtName.getText().isEmpty()
                    || txtAddress.getText().isEmpty()
                    || txtCuit.getText().isEmpty()
                    || txtBusinessName.getText().isEmpty()) {
                retorno.setError(new SPErrorDto("Faltan campos requeridos."));
                return retorno;
            }
        }

        if (!Sanatizer.validateEmail(txtEmail.getText())) {
            retorno.setError(new SPErrorDto("Email invalido."));
            return retorno;
        }
        if (!String.valueOf(txtPassword.getPassword()).equals(String.valueOf(txtRePassword.getPassword()))) {
            retorno.setError(new SPErrorDto("Contraseñas no coinciden."));
            return retorno;
        }

        switch (String.valueOf(cboUserType.getSelectedItem())) {
            case "Consumidor":
                retorno = new UserDto(txtEmail.getText(), String.valueOf(txtPassword.getPassword()), 2);
                break;
            case "Oferente":
                retorno = new UserDto(
                        txtEmail.getText(),
                        String.valueOf(txtPassword.getPassword()),
                        3,
                        txtName.getText(),
                        txtAddress.getText(),
                        txtCuit.getText(),
                        txtBusinessName.getText(),
                        0,
                        null, null);

                break;
            default:
                throw new AssertionError();
        }
        return retorno;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupChangeUser = new javax.swing.ButtonGroup();
        nameLabel = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtBusinessName = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        businessNameLabel = new javax.swing.JLabel();
        cuitLabel = new javax.swing.JLabel();
        passwordLabel = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        repeatPasswordLabel = new javax.swing.JLabel();
        txtRePassword = new javax.swing.JPasswordField();
        passwordDisplayRadioButton = new javax.swing.JRadioButton();
        nameInvalid = new javax.swing.JLabel();
        direccionInvalid = new javax.swing.JLabel();
        emailInvalid = new javax.swing.JLabel();
        businessNameInvalid = new javax.swing.JLabel();
        cuitInvalid = new javax.swing.JLabel();
        passwordInvalid = new javax.swing.JLabel();
        repeatPasswordInvalid = new javax.swing.JLabel();
        registerButton = new javax.swing.JButton();
        cboUserType = new javax.swing.JComboBox<>();
        cancelButton = new javax.swing.JButton();
        txtCuit = new javax.swing.JFormattedTextField();

        setBackground(new java.awt.Color(75, 82, 97));

        nameLabel.setForeground(new java.awt.Color(236, 241, 245));
        nameLabel.setText("Nombre");

        txtAddress.setBackground(new java.awt.Color(75, 82, 97));
        txtAddress.setForeground(new java.awt.Color(0, 171, 170));
        txtAddress.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 171, 170)));
        txtAddress.setCaretColor(new java.awt.Color(255, 255, 255));
        txtAddress.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAddressFocusLost(evt);
            }
        });
        txtAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAddressActionPerformed(evt);
            }
        });

        txtName.setBackground(new java.awt.Color(75, 82, 97));
        txtName.setForeground(new java.awt.Color(0, 171, 170));
        txtName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 171, 170)));
        txtName.setCaretColor(new java.awt.Color(255, 255, 255));

        txtEmail.setBackground(new java.awt.Color(75, 82, 97));
        txtEmail.setForeground(new java.awt.Color(0, 171, 170));
        txtEmail.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 171, 170)));
        txtEmail.setCaretColor(new java.awt.Color(255, 255, 255));
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        txtBusinessName.setBackground(new java.awt.Color(75, 82, 97));
        txtBusinessName.setForeground(new java.awt.Color(0, 171, 170));
        txtBusinessName.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 171, 170)));
        txtBusinessName.setCaretColor(new java.awt.Color(255, 255, 255));

        lastNameLabel.setForeground(new java.awt.Color(236, 241, 245));
        lastNameLabel.setText("Direccion");

        emailLabel.setForeground(new java.awt.Color(236, 241, 245));
        emailLabel.setText("E-mail");

        businessNameLabel.setForeground(new java.awt.Color(236, 241, 245));
        businessNameLabel.setText("Razon Social");

        cuitLabel.setForeground(new java.awt.Color(236, 241, 245));
        cuitLabel.setText("CUIT");

        passwordLabel.setForeground(new java.awt.Color(236, 241, 245));
        passwordLabel.setText("Contraseña");

        txtPassword.setBackground(new java.awt.Color(75, 82, 97));
        txtPassword.setForeground(new java.awt.Color(0, 171, 170));
        txtPassword.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 171, 170)));
        txtPassword.setCaretColor(new java.awt.Color(255, 255, 255));
        txtPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPasswordActionPerformed(evt);
            }
        });

        repeatPasswordLabel.setForeground(new java.awt.Color(236, 241, 245));
        repeatPasswordLabel.setText("Repetir contraseña");

        txtRePassword.setBackground(new java.awt.Color(75, 82, 97));
        txtRePassword.setForeground(new java.awt.Color(0, 171, 170));
        txtRePassword.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 171, 170)));
        txtRePassword.setCaretColor(new java.awt.Color(255, 255, 255));
        txtRePassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRePasswordActionPerformed(evt);
            }
        });

        passwordDisplayRadioButton.setBackground(new java.awt.Color(75, 82, 97));
        passwordDisplayRadioButton.setForeground(new java.awt.Color(236, 241, 245));
        passwordDisplayRadioButton.setText("Mostrar Contraseña ");
        passwordDisplayRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordDisplayRadioButtonActionPerformed(evt);
            }
        });

        nameInvalid.setFont(nameInvalid.getFont().deriveFont(nameInvalid.getFont().getStyle() | java.awt.Font.BOLD, nameInvalid.getFont().getSize()+1));
        nameInvalid.setForeground(new java.awt.Color(0, 171, 170));
        nameInvalid.setText("Nombre invalido");

        direccionInvalid.setForeground(new java.awt.Color(0, 171, 170));
        direccionInvalid.setText("Direccion invalida");

        emailInvalid.setForeground(new java.awt.Color(0, 171, 170));
        emailInvalid.setText("E-mail invalido");

        businessNameInvalid.setForeground(new java.awt.Color(0, 171, 170));
        businessNameInvalid.setText("Razon social invalida");

        cuitInvalid.setForeground(new java.awt.Color(0, 171, 170));
        cuitInvalid.setText("Cuit invalido");

        passwordInvalid.setForeground(new java.awt.Color(0, 171, 170));
        passwordInvalid.setText("Contraseña invalida");

        repeatPasswordInvalid.setForeground(new java.awt.Color(0, 171, 170));
        repeatPasswordInvalid.setText("No coinciden");

        registerButton.setBackground(new java.awt.Color(0, 171, 170));
        registerButton.setForeground(new java.awt.Color(236, 241, 245));
        registerButton.setText("Registrarse");
        registerButton.setBorder(null);
        registerButton.setFocusPainted(false);

        cboUserType.setBackground(new java.awt.Color(236, 241, 245));
        cboUserType.setForeground(new java.awt.Color(75, 82, 97));
        cboUserType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Consumidor", "Oferente" }));
        cboUserType.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 171, 170)));
        cboUserType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboUserTypeActionPerformed(evt);
            }
        });

        cancelButton.setBackground(new java.awt.Color(0, 171, 170));
        cancelButton.setForeground(new java.awt.Color(236, 241, 245));
        cancelButton.setText("Cancelar");
        cancelButton.setBorder(null);
        cancelButton.setFocusPainted(false);

        txtCuit.setBackground(new java.awt.Color(75, 82, 97));
        txtCuit.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 171, 170)));
        txtCuit.setForeground(new java.awt.Color(0, 171, 170));
        txtCuit.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtCuit.setCaretColor(new java.awt.Color(255, 255, 255));
        txtCuit.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCuitFocusLost(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtName, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtRePassword, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtAddress)
                    .addComponent(cboUserType, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtEmail)
                    .addComponent(txtPassword)
                    .addComponent(txtBusinessName)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(businessNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(businessNameInvalid, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameInvalid, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lastNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(direccionInvalid, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cuitLabel)
                                .addGap(18, 18, 18)
                                .addComponent(cuitInvalid))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(passwordLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(passwordInvalid))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(emailLabel)
                                .addGap(18, 18, 18)
                                .addComponent(emailInvalid))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(repeatPasswordLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(repeatPasswordInvalid))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(passwordDisplayRadioButton)
                                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 22, Short.MAX_VALUE))
                    .addComponent(txtCuit))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboUserType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(emailLabel)
                    .addComponent(emailInvalid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(passwordLabel)
                    .addComponent(passwordInvalid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(repeatPasswordLabel)
                    .addComponent(repeatPasswordInvalid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtRePassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel)
                    .addComponent(nameInvalid))
                .addGap(6, 6, 6)
                .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameLabel)
                    .addComponent(direccionInvalid))
                .addGap(6, 6, 6)
                .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cuitLabel)
                    .addComponent(cuitInvalid))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCuit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(businessNameLabel)
                    .addComponent(businessNameInvalid))
                .addGap(6, 6, 6)
                .addComponent(txtBusinessName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(passwordDisplayRadioButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(registerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(223, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressActionPerformed

    /**
     *
     * @author Santiago BOTON MOSTRAR / OCULTAR CONTRASEÑA VISTA PASSWORDFIELD
     */
    private void passwordDisplayRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordDisplayRadioButtonActionPerformed
        if (passwordDisplayRadioButton.isSelected()) {
            txtPassword.setEchoChar((char) 0);
            txtRePassword.setEchoChar((char) 0);
        } else {
            if (!passwordDisplayRadioButton.isSelected()) {
                txtPassword.setEchoChar('*');
                txtRePassword.setEchoChar('*');
            }
        }
    }//GEN-LAST:event_passwordDisplayRadioButtonActionPerformed

    private void txtPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPasswordActionPerformed

    private void txtRePasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRePasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRePasswordActionPerformed

    private void cboUserTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboUserTypeActionPerformed
        // TODO add your handling code here:

        switch (String.valueOf(cboUserType.getSelectedItem())) {
            case "Consumidor":
                System.out.println("Se selecciono Consumidor");
                clearFields();
                hideOffererFilds();
                hideWarnings();
                break;
            case "Oferente":
                System.out.println("Se selecciono Oferente");
                clearFields();
                showOffererFilds();
                hideWarnings();
                break;

            default:
                throw new AssertionError();
        }
    }//GEN-LAST:event_cboUserTypeActionPerformed

    private void txtAddressFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAddressFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAddressFocusLost

    private void txtCuitFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCuitFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCuitFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel businessNameInvalid;
    private javax.swing.JLabel businessNameLabel;
    private javax.swing.ButtonGroup buttonGroupChangeUser;
    public javax.swing.JButton cancelButton;
    public javax.swing.JComboBox<String> cboUserType;
    private javax.swing.JLabel cuitInvalid;
    private javax.swing.JLabel cuitLabel;
    private javax.swing.JLabel direccionInvalid;
    private javax.swing.JLabel emailInvalid;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JLabel nameInvalid;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JRadioButton passwordDisplayRadioButton;
    private javax.swing.JLabel passwordInvalid;
    private javax.swing.JLabel passwordLabel;
    public javax.swing.JButton registerButton;
    private javax.swing.JLabel repeatPasswordInvalid;
    private javax.swing.JLabel repeatPasswordLabel;
    public javax.swing.JTextField txtAddress;
    public javax.swing.JTextField txtBusinessName;
    private javax.swing.JFormattedTextField txtCuit;
    public javax.swing.JTextField txtEmail;
    public javax.swing.JTextField txtName;
    public javax.swing.JPasswordField txtPassword;
    public javax.swing.JPasswordField txtRePassword;
    // End of variables declaration//GEN-END:variables

    public void hideOffererFilds() {

        nameLabel.setVisible(false);
        txtName.setVisible(false);
        lastNameLabel.setVisible(false);
        txtAddress.setVisible(false);
        businessNameLabel.setVisible(false);
        txtBusinessName.setVisible(false);
        cuitLabel.setVisible(false);
        txtCuit.setVisible(false);
        nameInvalid.setVisible(false);
    }

    public void showOffererFilds() {
        nameLabel.setVisible(true);
        txtName.setVisible(true);
        lastNameLabel.setVisible(true);
        txtAddress.setVisible(true);
        businessNameLabel.setVisible(true);
        txtBusinessName.setVisible(true);
        cuitLabel.setVisible(true);
        txtCuit.setVisible(true);

    }

    public void clearFields() {
        txtEmail.setText("");
        txtPassword.setText("");
        txtRePassword.setText("");
        txtName.setText("");
        txtAddress.setText("");
        txtCuit.setText("");
        txtBusinessName.setText("");
    }

    public void hideWarnings() {
        emailInvalid.setVisible(false);
        passwordInvalid.setVisible(false);
        repeatPasswordInvalid.setVisible(false);
        nameInvalid.setVisible(false);
        direccionInvalid.setVisible(false);
        cuitInvalid.setVisible(false);
        businessNameInvalid.setVisible(false);
    }

    @Override
    public void focusGained(FocusEvent fe) {
        //  throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void focusLost(FocusEvent fe) {
        if (fe.getSource() == this.txtAddress
                && !direccionValidada.equalsIgnoreCase(txtAddress.getText())) {//Evita revalidar si no hay cambios
            this.validarDireccion();
        }
        if (fe.getSource() == this.txtCuit && txtCuit.getText().length() > 11) {//Evita revalidar si no hay cambios
            txtCuit.setText(txtCuit.getText().substring(0, 11));
        }
    }

    private void validarDireccion() {
        direccionValidada = GmapService.validateAddress(txtAddress.getText());
        txtAddress.setText(direccionValidada);
        txtAddress.setCaretPosition(0);
        if (direccionValidada.equalsIgnoreCase("Direccion Invalida")) {
            direccionInvalid.setVisible(true);
            registerButton.setEnabled(false);
        } else {
            this.direccionInvalid.setVisible(false);
            registerButton.setEnabled(true);
        }
    }

}
